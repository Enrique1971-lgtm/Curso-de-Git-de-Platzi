Resumen de la clase:

    Crear una nueva rama y pasarse para esa rama.

    Realizar los cambios en el código y realizar todos los commits necesarios.

    Antes de ejecutar el comando git cherry-pick, se debe anotar el id del commit que queremos traer al master.

    Para ello vamos a la rama donde esta el commit requerido (git checkout nombre_rama), ejecutamos el comando git log --oneline,
    copiamos el id del commit y nos regresamos a la rama master (git
    checkout master).

    En la rama master, ejecutamos: git cherry-pick id_commit.

    Git agregará al master el código requerido del commit indicado.

    Después, de ser necesario, se ejecutan los comandos git pull
    origin master y git push origin master para subir los cambios al
    repositorio de github en la nube.

    Si se necesitan traer todos los cambios de la rama de donde tomé el commit, se ejecuta desde master, git merge nombre_rama.

    De haber conflictos al hacer merge, se resuelven dejando las líneas de código necesarias o utilizando las opciones de Vscode.

* cherry-pick literalmente se traduce del ingles como agarrar cerezas, entonces lo 
que esta haciendo uno es agarrar esas cerecitas que son los commits de las ramas de mi proyecto.

* Cherry-Pick es una mala práctica porque significa que estamos reconstruyendo la historia, usa cherry-pick con sabiduría. Si no sabes lo que estás haciendo ten mucho cuidado.